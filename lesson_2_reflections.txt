1. What happens when you initialize a repository? Why do you need to do it?

- a .git folder is created to hold commit meta-data; need this to get ready 
to do commits

2. How is the staging area different from the working directory and the 
repository? What value do you think it offers?

- staging area is a selection of files that have been changed and are to be 
grouped into a commit. This allows flexibility to do separate commits based on 
logic of the changes.

3. How can you use the staging area to make sure you have one commit per 
logical change?

- by staging changes in logical groupings, committing; then staging the next
group, etc. This is the difference between git and the other VCS apps

4. What are some situations when branches would be helpful in keeping your 
history organized? How would branches help?

- general and x-rated versions of a game; human-language different websites; 
experiments; branching helps keep a working demonstration model (Italian Version) 

5. How do the diagrams help you visualize the branch structure?

- diagrams provide a graphic visualization of the branch structure

6. What is the result of merging two branches together? Why do we represent it 
in the diagram the way we do?

- programme has the combined code changes of each; because we can still see the 
histories of the side branches and the work-flow of the coding process.

7. What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges 
manually?

- automatic easy for re-uniting temporary quick-fix branches, when only one person 
is coding on the project; manual merging better for multi-coder work-flow
