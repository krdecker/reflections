1. When would you want to use a remote repository rather than keeping all your work local?

- Pretty well always, if doing work one does not want to lose, as hard drives have a way 
of failing at the worst . . . I can't . . . the memories are too raw & bitter

2. Why might you want to always pull changes manually rather than having Git automatically 
stay up-to-date with your remote repository?

- if you are open source, someone else may make changes to the repository on GitHub that
you will want to vet before pulling them to your machine. Automated syncing is just scary.

3. Describe the differences between forks, clones, and branches. When would you use one 
instead of another?

- A fork is the creation of a copy of a project within GitHub; use this when we want a 
copy of a project's files to play with and alter on our own. Clone is a copy of a repository 
either from remote to local machine, or within local; use this to create a new project 
based on exising code. A branch is a subsidiary history of commits which may or may not
be merged into the master branch, but tend toward that destiny. 

4. What is the benefit of having a copy of the last known state of the remote stored locally?

- status will tell me how far I have moved ahead of the remote and I can diff my advancements.
In addition, can fetch collaborators' changes and check against the local/origin. Finally, 
if remote is corrupted it can be restored from a local copy.

5. How would you collaborate without using Git or GitHub? What would be easier, and what would 
be harder?

- Probably collaborate on programme files on a shared cloud drive. This would require extensive 
commenting of the code, and/or more emails and texting. Also requires one to be on-line for
more of the time (less of a problem now than it used to be.) Making changes would be easier; 
keeping track of versions and experiments would be much more difficult.
